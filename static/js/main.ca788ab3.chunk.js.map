{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","API.js","screens/countryList.js","screens/MainScreen.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API","axios","create","baseURL","headers","countryList","MainScreen","useState","country","selectCountry","countryStatistics","setStatistics","totalStats","setTotalStats","useEffect","setTimeout","getTotalFigures","handleCountrySelect","e","target","value","a","get","data","preventDefault","params","name","status","numberWithCommas","largeNumber","toString","replace","className","lastUpdate","confirmed","recovered","onSubmit","onChange","map","index","type","critical","deaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+CCICQ,E,OATHC,EAAMC,OAAO,CACrBC,QAAQ,uCAERC,QAAS,CACL,kBAAmB,+BACvB,iBAAkB,wDCLNC,EAAc,CACtB,cACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,yBACA,WACA,SACA,oBACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,uBACA,iCACA,OACA,QACA,QACA,mBACA,gCACA,WACA,gBACA,yCACA,cACA,qBACA,aACA,UACA,OACA,aACA,SACA,UACA,mBACA,UACA,WACA,WACA,2BACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,oCACA,sBACA,OACA,UACA,SACA,gBACA,mBACA,oCACA,QACA,eACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,oCACA,iBACA,WACA,YACA,UACA,UACA,QACA,YACA,6BACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,8CACA,0BACA,SACA,aACA,yCACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,aACA,SACA,WACA,WACA,OACA,QACA,yBACA,aACA,aACA,YACA,UACA,SACA,mCACA,4BACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,oBACA,gBACA,cACA,YACA,cACA,UACA,OACA,iBACA,iCACA,SACA,OACA,WACA,QACA,sBACA,SACA,mBACA,WACA,OACA,oBACA,WACA,SACA,WACA,cACA,QACA,8BACA,UACA,2BACA,SACA,aACA,sBACA,+CACA,wBACA,cACA,6BACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,4BACA,WACA,WACA,kBACA,UACA,eACA,+CACA,cACA,QACA,YACA,cACA,WACA,yBACA,SACA,cACA,uBACA,SACA,aACA,+BACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,iCACA,SACA,SACA,UACA,6BACA,6DACA,6CACA,iCACA,UACA,aACA,UACA,qCACA,WACA,2BACA,wBACA,oBACA,iBACA,QACA,SACA,WACA,oBClKOC,MAlFf,WACE,MAAiCC,mBAAS,eAA1C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2CF,mBAAS,IAApD,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgDN,mBAAS,IAAzD,6BAEAO,qBAAU,WACRC,YAAW,YAPO,mCAQhBC,KACC,OACF,IAEH,IAAMC,EAAsB,SAACC,GAC3BT,EAAcS,EAAEC,OAAOC,QAbL,4CAyBpB,8BAAAC,EAAA,sEACyBrB,EAAIsB,IAAI,WADjC,gBACUC,EADV,EACUA,KACRV,EAAa,WAAb,cAAiBU,IAFnB,4CAzBoB,kEAmCpB,WAA8BL,GAA9B,mBAAAG,EAAA,6DACEH,EAAEM,iBADJ,SAIgCxB,EAAIsB,IAAI,WAAY,CAAEG,OAAQ,CAAEC,KAAMlB,KAJtE,mBAIUmB,EAJV,EAIUA,OAAOJ,EAJjB,EAIiBA,KACH,MAATI,EALL,yCAMahB,EAAa,WAAb,cAAiBY,KAN9B,4CAnCoB,sBA4CpB,SAASK,EAAiBC,GACxB,OAAIA,EACKA,EAAYC,WAAWC,QAAQ,wBAAyB,KAExD,KAIX,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,yDACA,iDAAoBpB,EAAWqB,cAC/B,oDAAuBL,EAAiBhB,EAAWsB,cACnD,oDAAuBN,EAAiBhB,EAAWuB,cACnD,mDAAsBP,EAAiBhB,EAAWuB,cAClD,iDAAoBP,EAAiBhB,EAAWuB,iBAGlD,sBAAKH,UAAU,iBAAf,UACE,uBAAMI,SAjEM,4CAiEZ,UACE,gDAhDN,wBAAQC,SAAUpB,EAAlB,SACGZ,EAAYiC,KAAI,SAAC9B,EAAS+B,GACzB,OAAO,iCAAqC/B,GAArC,UAAgBA,EAAhB,YAA2B+B,SAgDhC,uBAAOC,KAAK,SAASpB,MAAM,uBAE7B,iDAAoBQ,EAAiBlB,EAAkBuB,eACvD,4CAAeL,EAAiBlB,EAAkBF,YAClD,8CAAiBoB,EAAiBlB,EAAkBwB,cACpD,8CAAiBN,EAAiBlB,EAAkByB,cACpD,6CAAgBP,EAAiBlB,EAAkB+B,UAAnD,OACA,2CAAcb,EAAiBlB,EAAkBgC,QAAjD,gBCxEVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.ca788ab3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'; \r\n\r\nconst API = axios.create({\r\n    baseURL:'https://covid-19-data.p.rapidapi.com',\r\n\r\n    headers: {\r\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com',\r\n    'x-rapidapi-key': 'bbffdb51fbmshfb6f35e67afda15p17a33ajsn987019cb6191'\r\n      }\r\n}); //creating an instance of axios\r\n\r\nexport default API;\r\n\r\n","\r\n\r\n     export let countryList = [\r\n        \"Afghanistan\",\r\n        \"Albania\",\r\n        \"Algeria\",\r\n        \"American Samoa\",\r\n        \"Andorra\",\r\n        \"Angola\",\r\n        \"Anguilla\",\r\n        \"Antarctica\",\r\n        \"Antigua and Barbuda\",\r\n        \"Argentina\",\r\n        \"Armenia\",\r\n        \"Aruba\",\r\n        \"Australia\",\r\n        \"Austria\",\r\n        \"Azerbaijan\",\r\n        \"Bahamas\",\r\n        \"Bahrain\",\r\n        \"Bangladesh\",\r\n        \"Barbados\",\r\n        \"Belarus\",\r\n        \"Belgium\",\r\n        \"Belize\",\r\n        \"Benin\",\r\n        \"Bermuda\",\r\n        \"Bhutan\",\r\n        \"Bolivia\",\r\n        \"Bonaire\",\r\n        \"Bosnia and Herzegovina\",\r\n        \"Botswana\",\r\n        \"Brazil\",\r\n        \"Brunei Darussalam\",\r\n        \"Bulgaria\",\r\n        \"Burkina Faso\",\r\n        \"Burundi\",\r\n        \"Cabo Verde\",\r\n        \"Cambodia\",\r\n        \"Cameroon\",\r\n        \"Canada\",\r\n        \"Cayman Islands (the)\",\r\n        \"Central African Republic (the)\",\r\n        \"Chad\",\r\n        \"Chile\",\r\n        \"China\",\r\n        \"Christmas Island\",\r\n        \"Cocos (Keeling) Islands (the)\",\r\n        \"Colombia\",\r\n        \"Comoros (the)\",\r\n        \"Congo (the Democratic Republic of the)\",\r\n        \"Congo (the)\",\r\n        \"Cook Islands (the)\",\r\n        \"Costa Rica\",\r\n        \"Croatia\",\r\n        \"Cuba\",\r\n        \"Curaçao\",\r\n        \"Cyprus\",\r\n        \"Czechia\",\r\n        \"Côte d'Ivoire\",\r\n        \"Denmark\",\r\n        \"Djibouti\",\r\n        \"Dominica\",\r\n        \"Dominican Republic (the)\",\r\n        \"Ecuador\",\r\n        \"Egypt\",\r\n        \"El Salvador\",\r\n        \"Equatorial Guinea\",\r\n        \"Eritrea\",\r\n        \"Estonia\",\r\n        \"Eswatini\",\r\n        \"Ethiopia\",\r\n        \"Falkland Islands (the) [Malvinas]\",\r\n        \"Faroe Islands (the)\",\r\n        \"Fiji\",\r\n        \"Finland\",\r\n        \"France\",\r\n        \"French Guiana\",\r\n        \"French Polynesia\",\r\n        \"French Southern Territories (the)\",\r\n        \"Gabon\",\r\n        \"Gambia (the)\",\r\n        \"Georgia\",\r\n        \"Germany\",\r\n        \"Ghana\",\r\n        \"Gibraltar\",\r\n        \"Greece\",\r\n        \"Greenland\",\r\n        \"Grenada\",\r\n        \"Guadeloupe\",\r\n        \"Guam\",\r\n        \"Guatemala\",\r\n        \"Guernsey\",\r\n        \"Guinea\",\r\n        \"Guinea-Bissau\",\r\n        \"Guyana\",\r\n        \"Haiti\",\r\n        \"Heard Island and McDonald Islands\",\r\n        \"Holy See (the)\",\r\n        \"Honduras\",\r\n        \"Hong Kong\",\r\n        \"Hungary\",\r\n        \"Iceland\",\r\n        \"India\",\r\n        \"Indonesia\",\r\n        \"Iran (Islamic Republic of)\",\r\n        \"Iraq\",\r\n        \"Ireland\",\r\n        \"Isle of Man\",\r\n        \"Israel\",\r\n        \"Italy\",\r\n        \"Jamaica\",\r\n        \"Japan\",\r\n        \"Jersey\",\r\n        \"Jordan\",\r\n        \"Kazakhstan\",\r\n        \"Kenya\",\r\n        \"Kiribati\",\r\n        \"Korea (the Democratic People's Republic of)\",\r\n        \"Korea (the Republic of)\",\r\n        \"Kuwait\",\r\n        \"Kyrgyzstan\",\r\n        \"Lao People's Democratic Republic (the)\",\r\n        \"Latvia\",\r\n        \"Lebanon\",\r\n        \"Lesotho\",\r\n        \"Liberia\",\r\n        \"Libya\",\r\n        \"Liechtenstein\",\r\n        \"Lithuania\",\r\n        \"Luxembourg\",\r\n        \"Macao\",\r\n        \"Madagascar\",\r\n        \"Malawi\",\r\n        \"Malaysia\",\r\n        \"Maldives\",\r\n        \"Mali\",\r\n        \"Malta\",\r\n        \"Marshall Islands (the)\",\r\n        \"Martinique\",\r\n        \"Mauritania\",\r\n        \"Mauritius\",\r\n        \"Mayotte\",\r\n        \"Mexico\",\r\n        \"Micronesia (Federated States of)\",\r\n        \"Moldova (the Republic of)\",\r\n        \"Monaco\",\r\n        \"Mongolia\",\r\n        \"Montenegro\",\r\n        \"Montserrat\",\r\n        \"Morocco\",\r\n        \"Mozambique\",\r\n        \"Myanmar\",\r\n        \"Namibia\",\r\n        \"Nauru\",\r\n        \"Nepal\",\r\n        \"Netherlands (the)\",\r\n        \"New Caledonia\",\r\n        \"New Zealand\",\r\n        \"Nicaragua\",\r\n        \"Niger (the)\",\r\n        \"Nigeria\",\r\n        \"Niue\",\r\n        \"Norfolk Island\",\r\n        \"Northern Mariana Islands (the)\",\r\n        \"Norway\",\r\n        \"Oman\",\r\n        \"Pakistan\",\r\n        \"Palau\",\r\n        \"Palestine, State of\",\r\n        \"Panama\",\r\n        \"Papua New Guinea\",\r\n        \"Paraguay\",\r\n        \"Peru\",\r\n        \"Philippines (the)\",\r\n        \"Pitcairn\",\r\n        \"Poland\",\r\n        \"Portugal\",\r\n        \"Puerto Rico\",\r\n        \"Qatar\",\r\n        \"Republic of North Macedonia\",\r\n        \"Romania\",\r\n        \"Russian Federation (the)\",\r\n        \"Rwanda\",\r\n        \"Réunion\",\r\n        \"Saint Barthélemy\",\r\n        \"Saint Helena, Ascension and Tristan da Cunha\",\r\n        \"Saint Kitts and Nevis\",\r\n        \"Saint Lucia\",\r\n        \"Saint Martin (French part)\",\r\n        \"Saint Pierre and Miquelon\",\r\n        \"Saint Vincent and the Grenadines\",\r\n        \"Samoa\",\r\n        \"San Marino\",\r\n        \"Sao Tome and Principe\",\r\n        \"Saudi Arabia\",\r\n        \"Senegal\",\r\n        \"Serbia\",\r\n        \"Seychelles\",\r\n        \"Sierra Leone\",\r\n        \"Singapore\",\r\n        \"Sint Maarten (Dutch part)\",\r\n        \"Slovakia\",\r\n        \"Slovenia\",\r\n        \"Solomon Islands\",\r\n        \"Somalia\",\r\n        \"South Africa\",\r\n        \"South Georgia and the South Sandwich Islands\",\r\n        \"South Sudan\",\r\n        \"Spain\",\r\n        \"Sri Lanka\",\r\n        \"Sudan (the)\",\r\n        \"Suriname\",\r\n        \"Svalbard and Jan Mayen\",\r\n        \"Sweden\",\r\n        \"Switzerland\",\r\n        \"Syrian Arab Republic\",\r\n        \"Taiwan\",\r\n        \"Tajikistan\",\r\n        \"Tanzania, United Republic of\",\r\n        \"Thailand\",\r\n        \"Timor-Leste\",\r\n        \"Togo\",\r\n        \"Tokelau\",\r\n        \"Tonga\",\r\n        \"Trinidad and Tobago\",\r\n        \"Tunisia\",\r\n        \"Turkey\",\r\n        \"Turkmenistan\",\r\n        \"Turks and Caicos Islands (the)\",\r\n        \"Tuvalu\",\r\n        \"Uganda\",\r\n        \"Ukraine\",\r\n        \"United Arab Emirates (the)\",\r\n        \"United Kingdom of Great Britain and Northern Ireland (the)\",\r\n        \"United States Minor Outlying Islands (the)\",\r\n        \"United States of America (the)\",\r\n        \"Uruguay\",\r\n        \"Uzbekistan\",\r\n        \"Vanuatu\",\r\n        \"Venezuela (Bolivarian Republic of)\",\r\n        \"Viet Nam\",\r\n        \"Virgin Islands (British)\",\r\n        \"Virgin Islands (U.S.)\",\r\n        \"Wallis and Futuna\",\r\n        \"Western Sahara\",\r\n        \"Yemen\",\r\n        \"Zambia\",\r\n        \"Zimbabwe\",\r\n        \"Åland Islands\"\r\n    ];\r\n\r\n\r\n","import React from \"react\";\r\nimport API from \"../API\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { countryList } from \"./countryList\";\r\n\r\nfunction MainScreen() {\r\n  const [country, selectCountry] = useState(\"Afghanistan\");\r\n  const [countryStatistics, setStatistics] = useState({});\r\n  const [totalStats, setTotalStats] = useState({});\r\n  const [countriesFromAPI, setCountriesFromAPI] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getTotalFigures();\r\n    }, 901);\r\n  }, []);\r\n\r\n  const handleCountrySelect = (e) => {\r\n    selectCountry(e.target.value);\r\n  };\r\n\r\n  const getListOfAllCountries = () => {\r\n    return (\r\n      <select onChange={handleCountrySelect}>\r\n        {countryList.map((country, index) => {\r\n          return <option key={`${country}-${index}`}>{country}</option>;\r\n        })}\r\n      </select>\r\n    );\r\n  };\r\n  async function getTotalFigures() {\r\n    const { data } = await API.get(\"/totals\");\r\n    setTotalStats(...data);\r\n  }\r\n\r\n  //   async function getCountriesFromAPI(){\r\n  //     const { data } = await API.get(\"/help/countries\");\r\n  //     setCountriesFromAPI(...data)\r\n  //   }\r\n\r\n  async function handleOnSubmit(e) {\r\n    e.preventDefault();\r\n    //console.log(\"submit called\")\r\n    //console.log(country)\r\n    const { status,data } = await API.get(\"/country\", { params: { name: country } });\r\n    if(status===200){\r\n        return setStatistics(...data);\r\n    }\r\n}\r\n  function numberWithCommas(largeNumber) {\r\n    if (largeNumber) {\r\n      return largeNumber.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"subContainer_1\">\r\n          <h1>INFORMATION AT A GLANCE</h1>\r\n          <div>Updated Time: {totalStats.lastUpdate}</div>\r\n          <div>Total Confirmed: {numberWithCommas(totalStats.confirmed)}</div>\r\n          <div>Total Recovered: {numberWithCommas(totalStats.recovered)}</div>\r\n          <div>Total Critical: {numberWithCommas(totalStats.recovered)}</div>\r\n          <div>Total Deaths: {numberWithCommas(totalStats.recovered)}</div>\r\n        </div>\r\n\r\n        <div className=\"subContainer_2\">\r\n          <form onSubmit={handleOnSubmit}>\r\n            <h1>SELECT COUNTRY</h1>\r\n            {getListOfAllCountries(countryList)}\r\n            <input type=\"submit\" value=\"Generate Report\" />\r\n          </form>\r\n          <div>Updated Time: {numberWithCommas(countryStatistics.lastUpdate)}</div>\r\n          <div>Country: {numberWithCommas(countryStatistics.country)}</div>\r\n          <div>Confirmed: {numberWithCommas(countryStatistics.confirmed)}</div>\r\n          <div>Recovered: {numberWithCommas(countryStatistics.recovered)}</div>\r\n          <div>Critical: {numberWithCommas(countryStatistics.critical)} </div>\r\n          <div>Deaths: {numberWithCommas(countryStatistics.deaths)} </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MainScreen from './screens/MainScreen'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainScreen/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}